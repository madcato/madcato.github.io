I"å<p>You can use GCD for thread substitutions. It needs blocks.</p>

<p>Example of use:</p>

<figure class="highlight"><pre><code class="language-objc" data-lang="objc"> <span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">doTimeConsumingOperation</span><span class="p">:(</span><span class="n">id</span><span class="p">)</span><span class="nv">operation</span> <span class="p">{</span>  
    <span class="n">dispatch_queue_t</span> <span class="n">queue</span><span class="p">;</span>  
    <span class="n">queue</span> <span class="o">=</span> <span class="n">dispatch_queue_create</span><span class="p">(</span><span class="s">"com.example.operation"</span><span class="p">,</span><span class="nb">NULL</span><span class="p">);</span>  
    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">queue</span><span class="p">,</span><span class="o">^</span><span class="p">{</span>  
       <span class="p">[</span><span class="n">operation</span> <span class="nf">doOperation</span><span class="p">];</span> <span class="c1">// Main op.  </span>
    <span class="p">});</span>  
    <span class="n">dispatch_release</span><span class="p">(</span><span class="n">queue</span><span class="p">)</span>  
 <span class="p">}</span>  </code></pre></figure>

<p>You can use <strong>dispatch_sync</strong> instead <strong>dispatch_async</strong> for locked code execution.</p>

<p>Another sample of code is this way to perform a delayed selector on an object:</p>

<figure class="highlight"><pre><code class="language-objc" data-lang="objc"> <span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">doLaterOperation</span><span class="p">:(</span><span class="n">id</span><span class="p">)</span><span class="nv">operation</span> <span class="p">{</span>  
      <span class="n">dispatch_time_t</span> <span class="n">delay</span><span class="p">;</span>  
      <span class="n">delay</span> <span class="o">=</span> <span class="n">dispatch_time</span><span class="p">(</span><span class="n">DISPATCH_TIME_NOW</span><span class="p">,</span> <span class="mi">50000</span> <span class="cm">/* nanoseconds */</span><span class="p">);</span>  
      <span class="n">dispatch_after</span><span class="p">(</span><span class="n">delay</span><span class="p">,</span><span class="o">^</span><span class="p">{</span>  
           <span class="p">[</span><span class="n">operation</span> <span class="nf">doOperation</span><span class="p">];</span> <span class="c1">// Main op.  </span>
      <span class="p">});</span>  
      <span class="n">dispatch_release</span><span class="p">(</span><span class="n">delay</span><span class="p">);</span>
 <span class="p">}</span>  </code></pre></figure>

<p>Finally other fine use of GCD is for creating safe singleton objects:</p>

<figure class="highlight"><pre><code class="language-objc" data-lang="objc"> <span class="k">+</span><span class="p">(</span><span class="n">MyClass</span> <span class="o">*</span><span class="p">)</span> <span class="n">sharedInstance</span> <span class="p">{</span>  
      <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">predicate</span><span class="p">;</span>  
      <span class="k">static</span> <span class="n">MyClass</span> <span class="o">*</span><span class="n">shared</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>  
      <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">predicate</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>  
          <span class="n">shared</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyClass</span> <span class="nf">alloc</span><span class="p">]</span> <span class="nf">init</span><span class="p">];</span>  
      <span class="p">});</span>  
      <span class="k">return</span> <span class="n">shared</span><span class="p">;</span>  
 <span class="p">}</span>  </code></pre></figure>

<p>With <strong>dispatch_once</strong> the code only will be executed one and only one time.</p>

<p>Available in iOS 4.0 and later.  <br />
Available in Mac OS X v10.6 and later.  <br />
20110324.26</p>
:ET