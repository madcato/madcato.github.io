I"²<p>NSOperation is useful for asynchronous executions:</p>

<figure class="highlight"><pre><code class="language-objc" data-lang="objc"><span class="k">@interface</span> <span class="nc">MyOp</span> <span class="p">:</span> <span class="nc">NSOperation</span>  
<span class="k">@end</span>  
<span class="k">@implementation</span> <span class="nc">MyOp</span>  
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="n">main</span> <span class="p">{</span>  
<span class="c1">// Your work goes here  </span>
<span class="p">}</span>  
<span class="k">@end</span>  </code></pre></figure>

<p>Sample usage:</p>

<figure class="highlight"><pre><code class="language-objc" data-lang="objc"><span class="n">NSOperationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="nf">alloc</span><span class="p">]</span> <span class="nf">init</span><span class="p">];</span>  
<span class="n">MyOp</span><span class="o">*</span> <span class="n">op</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyOp</span> <span class="nf">alloc</span><span class="p">]</span> <span class="nf">init</span><span class="p">];</span>  
<span class="p">[</span><span class="n">queue</span> <span class="nf">addOperation</span><span class="p">:</span><span class="n">op</span><span class="p">];</span>  </code></pre></figure>

<p>20110324.21</p>
:ET