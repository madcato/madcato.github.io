I"'
<h1 id="advance-ruby-class-self">Advance Ruby: class « self</h1>

<p>With <code class="highlighter-rouge">class &lt;&lt; self</code> every method declared after this becomes a class method.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Person</span>
  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
    <span class="k">def</span> <span class="nf">once</span><span class="p">(</span><span class="o">*</span><span class="n">ids</span><span class="p">)</span>
    <span class="c1"># code</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>But if <code class="highlighter-rouge">class &lt;&lt; self</code> is declared inside an instance method, then <code class="highlighter-rouge">self</code> relates to the object being called. This means that the following declarations affect that object and not its class.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Person</span>
  <span class="k">def</span> <span class="nf">process</span>
    <span class="n">method2</span>
  <span class="k">end</span>
<span class="kp">private</span>
  <span class="k">def</span> <span class="nf">process1</span>
    <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
      <span class="k">alias</span> <span class="n">process</span> <span class="n">process2</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">process2</span>
    <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
      <span class="k">alias</span> <span class="n">process</span> <span class="n">process1</span>
    <span class="k">end</span>
  <span class="k">end</span>
  
  <span class="k">alias</span> <span class="n">process</span> <span class="n">process1</span>
<span class="k">end</span>
</code></pre></div></div>

<p>This code makes that every time method <code class="highlighter-rouge">process</code> of an instance of class <code class="highlighter-rouge">Person</code> is called, an <code class="highlighter-rouge">alias</code> provokes that the next time <code class="highlighter-rouge">process</code> is called, the function called will be different: from <code class="highlighter-rouge">process1</code> will change to <code class="highlighter-rouge">process2</code> and so on.</p>
:ET